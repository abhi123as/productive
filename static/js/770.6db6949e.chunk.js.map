{"version":3,"file":"static/js/770.6db6949e.chunk.js","mappings":"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","sources":["app/pages/layout-builder/Todo/Content/reactTables.tsx","app/pages/layout-builder/Todo/forms/addtask/addTask.tsx","app/pages/layout-builder/Todo/Content/DataTable.tsx","app/pages/layout-builder/Todo/Content/BootstrapTable.tsx","app/pages/layout-builder/Todo/Todo.tsx"],"sourcesContent":["import { useState, useReducer, useEffect,useRef} from \"react\";\r\nimport { KTSVG } from \"../../../../../_metronic/helpers\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button } from \"react-bootstrap-v5\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { event, param } from \"jquery\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"./table.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport DataTable from \"datatables.net-dt\";\r\nimport $ from \"jquery\";\r\nimport { change } from \"redux-form\";\r\nimport { number } from \"yup\";\r\nimport { typeOf } from \"react-is\";\r\nimport { KeyObject } from \"crypto\";\r\n\r\nexport default function ReactTables({ tasks, setModal }: any) {\r\n    \r\n   const [filterIps,setFilterIps]=useState({\r\n    f1:\"\",\r\n    f2:\"\"\r\n   })\r\n  let table = new DataTable(\"#table1\", {\r\n\r\n  // dom: 'Qfrtip',\r\n    destroy: true,\r\n    pageLength: 5,\r\n    lengthMenu: [\r\n      [5, 10, 25, 50, -1],\r\n      [5, 10, 25, 50, \"All\"],\r\n    ],\r\n   search:true,\r\n   \r\n   columnDefs: [ {\r\n    //class name of col,which is not need to sort\r\n    targets: 'no-order',\r\n    orderable: false,\r\n} ]\r\n  });\r\n\r\n function handleFilter(event:any){\r\n    event.preventDefault();\r\n    //alert(\"status-\"+filterIps.f2)\r\n  //  console.log(\"date\"+filterIps.f1+\"status\"+filterIps.f2)\r\n   //filter specific column \r\n   table .column(2).search(filterIps.f1)\r\n   //.column(0).search(filterIps.f2)\r\n   .draw();\r\n  //search based on inpur\r\n  // table.search(filterIps.f2)\r\n  // .draw();\r\n  \r\n}\r\n\r\n//remove all filter on reset\r\nfunction handleReset(){\r\n  table.search( '' )\r\n .columns().search( '' )\r\n .draw();\r\n}\r\n//   $.fn.dataTable.ext.search.push(\r\n//    function(setting:any,data:any,index:any){\r\n//       console.log(\"data\",data.toJson)\r\n \r\n//       if(filterIps.f2==data[0]){\r\n//        return true;\r\n//      }\r\n  \r\n//      return false;\r\n//      //var dateColumn=new Date(data[2]);\r\n//    }\r\n//  )\r\n\r\n\r\n  const history = useHistory();\r\n  // const state=useSelector(state=>state.user)\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    setData(tasks);\r\n  }, [tasks]);\r\n  //console.log(\"task\",data)\r\n  function handleDelete(name: string, id: string) {\r\n    Swal.fire({\r\n      title: \"Are You Sure?\",\r\n      html: \"want to delete \" + name + \" Task ?\",\r\n      confirmButtonText: \"Yes\",\r\n      showCloseButton: true,\r\n      showCancelButton: true,\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const api = await fetch(\r\n          `http://localhost:8081/api/app/deletetask/${id}`,\r\n          { method: \"DELETE\" }\r\n        );\r\n        const data = await api.json();\r\n        if (data.messageType == \"success\") {\r\n          toast.success(data.message, {\r\n            hideProgressBar: true,\r\n          });\r\n          setModal(true);\r\n        } else {\r\n          toast.error(data.message, {\r\n            hideProgressBar: true,\r\n          });\r\n          //history.push('/todo');\r\n          setModal(true);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  function renderSwitch(param: string) {\r\n    switch (param) {\r\n      case \"1\":\r\n        return <span className=\"badge badge-success\">Done</span>;\r\n      case \"2\":\r\n        return <span className=\"badge badge-warning\">In-Progress</span>;\r\n      case \"3\":\r\n        return <span className=\"badge badge-danger\">Over Due</span>;\r\n      case \"0\":\r\n        return <span className=\"badge badge-secondary\">Not-started</span>;\r\n      default:\r\n        return <span className=\"badge badge-secondary\">Not-started</span>;\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card-body py-3 react-table\">\r\n        <div className=\"table-responsive\">\r\n          {data.length ? (\r\n         <>\r\n          <div className=\"text-end me-12\">\r\n          <div\r\n            className=\"mx-2 btn btn-icon btn-bg-solid btn-active-color-primary btn-sm dropdown-toggle \"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <i className=\"bi bi-funnel fs-1\"></i>\r\n          </div>\r\n\r\n          <ul className=\"dropdown-menu bg-secondary fw-bold p-4\">\r\n            <form id=\"filterFrm\" onSubmit={(event)=>handleFilter(event)}>\r\n              {/* <hr className=\"dropdown-divider\" /> */}\r\n              <li>\r\n                <span className=\"\">By Date</span>\r\n                <input type=\"date\" className=\"form-control mb-2 mb-md-0\" id=\"f1\" onChange={(event)=>setFilterIps({f1:event.target.value,f2:filterIps.f2})}/>\r\n              </li>\r\n              <hr />\r\n              <li>\r\n                <span className=\"\"> By Status</span>\r\n                <select\r\n                  className=\"form-control mb-2 mb-md-0\"\r\n                  aria-label=\"Select example\"\r\n                  id=\"f2\"\r\n                  onChange={(event)=>setFilterIps({f2:event.target.value,f1:filterIps.f1})}\r\n                >\r\n                  <option value=\"\">Set an Status</option>\r\n                  <option value=\"1\" className=\"btn btn-success btn-sm \">\r\n                    Done\r\n                  </option>\r\n                  <option value=\"2\" className=\"btn btn-warning btn-sm\">\r\n                    In-Progress\r\n                  </option>\r\n                  <option value=\"0\" className=\"badge badge-secondary\">\r\n                    Not Started\r\n                  </option>\r\n                  <option value=\"4\" className=\"badge badge-danger\">\r\n                    Over Due\r\n                  </option>\r\n                </select>\r\n              </li>\r\n              <li>\r\n                <div className=\"d-flex justify-content-around mt-2\">\r\n                  <div>\r\n                    <button\r\n                      type=\"reset\"\r\n                      id=\"kt_login_signup_form_cancel_button\"\r\n                      className=\"btn btn-lg btn-light-primary btn-sm\"\r\n                      // data-bs-dismiss=\"modal\"\r\n                      onClick={()=>handleReset()}\r\n                    >\r\n                      Reset\r\n                    </button>\r\n                  </div>\r\n                  <div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      id=\"filterSubmit\"\r\n                      className=\"btn btn-lg btn-primary btn-sm\"\r\n                    >\r\n                      Apply\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </form>\r\n            {/* <li>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                Something else here\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <hr className=\"dropdown-divider\" />\r\n            </li>\r\n            <li>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                Separated link\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n          </div>\r\n            <table\r\n              className=\"table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3\"\r\n              id=\"table1\"\r\n            >\r\n              <thead>\r\n\r\n                <tr className=\"fw-bolder text-bolder\">\r\n                  <th className=\"min-w-150px text-center\">Status</th>\r\n                  <th className=\"min-w-140px text-center\">Task Title</th>\r\n                  <th className=\"min-w-120px text-center\">Due Date</th>\r\n                  <th className=\"min-w-120px text-center\">Description</th>\r\n                  <th className=\"min-w-100px text-center no-order\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"\">\r\n                <>\r\n                  {data.map((ele: any,i) => {\r\n                    return (\r\n                      <>\r\n                        <tr key={i}>\r\n                          <td className=\"text-center\" style={{ width: \"15%\" }}>\r\n                            {renderSwitch(ele.status)}\r\n                          </td>\r\n                          <td\r\n                            className=\"text-center text-wrap\"\r\n                            style={{ width: \"15%\" }}\r\n                          >\r\n                            <span\r\n                              className=\"text-center\"\r\n                              style={{ width: \"15%\" }}\r\n                            >\r\n                              {ele.taskName}\r\n                            </span>\r\n                          </td>\r\n                          <td\r\n                            style={{ width: \"15%\" }}\r\n                            className=\"text-center text-wrap\"\r\n                          >\r\n                            <span className=\"text\"> {ele.taskDueDate}</span>\r\n                          </td>\r\n                          <td className=\"text-center text-wrap\">\r\n                            <div className=\"scrollable-cell d-flex justify-content-evenly\">\r\n                              {ele.taskDescription}\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"d-flex justify-content-evenly \">\r\n                            <div>\r\n                              <Link\r\n                                to={`/crafted/pages/edit/${ele.taskId}`}\r\n                                className=\"btn btn-icon btn-bg-light btn-active-color-primary btn-sm\"\r\n                              >\r\n                                <KTSVG\r\n                                  path=\"/media/icons/duotune/art/art005.svg\"\r\n                                  className=\"svg-icon-3\"\r\n                                />\r\n                              </Link>\r\n                            </div>\r\n                            <div>\r\n                              <Button\r\n                                className=\"btn btn-icon btn-bg-light btn-active-color-primary btn-sm\"\r\n                                onClick={() => {\r\n                                  handleDelete(ele.taskName, ele.taskId);\r\n                                }}\r\n                              >\r\n                                <KTSVG\r\n                                  path=\"/media/icons/duotune/general/gen027.svg\"\r\n                                  className=\"svg-icon-3\"\r\n                                />\r\n                              </Button>\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </>\r\n              </tbody>\r\n            </table>\r\n         </>\r\n          ) : (\r\n            <div className=\"text-center py-4 my-6\">\r\n              <h1>No Tasks At Present</h1>\r\n            </div>\r\n          )}\r\n\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useField, useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport clsx from \"clsx\";\r\nimport $ from \"jquery\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Field, reduxForm, reset } from \"redux-form\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Button } from \"react-bootstrap-v5\";\r\nimport { toast } from \"react-toastify\";\r\nimport { KTSVG } from \"../../../../../../_metronic/helpers/components/KTSVG\";\r\nconst user = JSON.parse(localStorage.getItem(\"user\")!);\r\n \r\nconst initialValues = {\r\n  title: \"\",\r\n  desc: \"\",\r\n  due: \"\",\r\n  status: \"\",\r\n  remainder: [\"NINE_AM_ON_DUE_DATE\"],\r\n  users:user.userId\r\n};\r\n\r\nconst registrationSchema = Yup.object().shape({\r\n  title: Yup.string()\r\n    .min(1, \"Minimum 1 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Title is required\"),\r\n  desc: Yup.string()\r\n    .min(2, \"Minimum 2 Characters\")\r\n    .max(2000, \"Maximum 2000 characters\")\r\n    .required(\"Description is required\"),\r\n  due: Yup.date()\r\n    .min(new Date(Date.now() - 86400000), \"Invalid Date\")\r\n    .required(\"Due Date is required\"),\r\n\r\n  remainder: Yup.array(),\r\n});\r\nconst AddTask = ({ setModal }: any) => {\r\n \r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: registrationSchema,\r\n\r\n    onSubmit: async (\r\n      values,\r\n      { setStatus, setSubmitting, setFieldValue, resetForm }\r\n    ) => {\r\n      console.log(values);\r\n      setStatus(null);\r\n      const Task = {\r\n        taskName: values.title,\r\n        taskDescription: values.desc,\r\n        taskDueDate: values.due,\r\n        status: values.status,\r\n        reminders:values.remainder ,\r\n        userId: values.users,\r\n        assignedby:user.userId,\r\n      };\r\n      console.log(\"task data=={}\",Task);\r\n      const api = await fetch(\"http://localhost:8081/api/app/addtask\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(Task),\r\n      });\r\n      const data = await api.json();\r\n      //console.log(data.message);\r\n      if (data) {\r\n        toast.success(data.message, {\r\n          hideProgressBar: true,\r\n        });\r\n        resetForm();\r\n        setModal(true);\r\n      }\r\n      document.getElementById(\"clsBtn\")?.click();\r\n    },\r\n  });  \r\n  type User = {\r\n    userId:string;\r\n    userName: string;\r\n    name:string;\r\n    id:string;\r\n    // Add other properties if available, e.g., id, email, etc.\r\n  };\r\n  const [users, setUsers] = useState<User[]>([]);\r\n\r\n  // Assuming you call the load function in the useEffect hook to fetch the data.\r\n  useEffect(() => {\r\n    const load = async () => {\r\n      const api = await fetch(\"http://localhost:8082/api/auth/getAllUsers\", {\r\n        method: \"GET\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n      const apiData = await api.json();\r\n      const users: User[] = apiData.map((user: User) => ({ name: user.userName,id:user.userId}));\r\n      setUsers(users);\r\n    };\r\n\r\n    load();\r\n  }, []);\r\n \r\n\r\n  const reminderOptions: string[]= [\"FOUR_HOURS_BEFORE\", \"TWO_HOURS_BEFORE\"]; \r\n  return (\r\n   \r\n    <div className=\"modal fade mx-auto\" id=\"addTask\">\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">Add Task</h5>\r\n            <div\r\n              className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              id=\"clsBtn\"\r\n            >\r\n              <KTSVG\r\n                path=\"/media/icons/duotune/arrows/arr061.svg\"\r\n                className=\"svg-icon svg-icon-2x\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"fs-6\">\r\n              <form\r\n                className=\"form w-100 fv-plugins-bootstrap5 fv-plugins-framework\"\r\n                noValidate\r\n                id=\"kt_login_signup_form\"\r\n                onSubmit={formik.handleSubmit}\r\n              >\r\n                {formik.status && (\r\n                  <div className=\"mb-lg-15 alert d-flex justify-content-between alert-danger\">\r\n                    <div className=\"alert-text font-weight-bold\">\r\n                      {formik.status}\r\n                    </div>\r\n                    <div>\r\n                      {/* <button\r\n              type=\"button\"\r\n              className=\"position-absolute position-sm-relative m-2 m-sm-0 top-0 end-0 btn btn-icon ms-sm-auto\"\r\n              data-bs-dismiss=\"alert\"\r\n            >\r\n              <span className=\"svg-icon svg-icon-1 svg-icon-light\">\r\n                <i className=\"bi bi-x fs-1 fw-bold\"></i>\r\n              </span>\r\n            </button> */}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                <dl className=\"mb-4\">\r\n                  {/* begin::Form group Firstname */}\r\n                  <div className=\"row fv-row \">\r\n                    <div className=\"fv-row mb-6\">\r\n                      <dt>\r\n                        <label className='class=\"form-label fw-bolder fs-5 text-dark required'>\r\n                          Task Title\r\n                        </label>\r\n                        <input\r\n                          placeholder=\"Enter Task title\"\r\n                          type=\"text\"\r\n                          autoComplete=\"off\"\r\n                          {...formik.getFieldProps(\"title\")}\r\n                          className={clsx(\"form-control form-control-solid\")}\r\n                        />\r\n                      </dt>\r\n                      <dd className=\"position-absolute\">\r\n                        {formik.touched.title && formik.errors.title && (\r\n                          <div className=\"fv-plugins-message-container fs-5\">\r\n                            <div className=\"fv-help-block\">\r\n                              <span role=\"alert\" className=\"text-danger\">\r\n                                {formik.errors.title}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </dd>\r\n                    </div>\r\n                  </div>\r\n                  {/* end::Form group */}\r\n\r\n                  {/* begin::Form group Email */}\r\n                  <div className=\"fv-row mb-6\">\r\n                    <dt>\r\n                      <label className=\"form-label fw-bolder text-dark required\">\r\n                        Task Description\r\n                      </label>\r\n                      <textarea\r\n                        rows={5}\r\n                        placeholder=\"Enter Task Desc\"\r\n                        autoComplete=\"off\"\r\n                        {...formik.getFieldProps(\"desc\")}\r\n                        className={clsx(\"form-control  form-control-solid\")}\r\n                      />\r\n                    </dt>\r\n                    <dd className=\"position-absolute\">\r\n                      {formik.touched.desc && formik.errors.desc && (\r\n                        <div className=\"fv-plugins-message-container fs-5\">\r\n                          <div className=\"fv-help-block\">\r\n                            <span role=\"alert\" className=\"text-danger\">\r\n                              {formik.errors.desc}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </dd>\r\n                  </div>\r\n                  {/* end::Form group */}\r\n\r\n                  {/* begin::Form group Password */}\r\n                  <div className=\" fv-row mb-6\" data-kt-password-meter=\"true\">\r\n                    <dt>\r\n                      <label className=\"form-label fw-bolder text-dark required\">\r\n                        Due Date\r\n                      </label>\r\n                      <div className=\"position-relative\">\r\n                        <input\r\n                          type=\"datetime-local\"\r\n                          placeholder=\"date\"\r\n                          autoComplete=\"off\"\r\n                          {...formik.getFieldProps(\"due\")}\r\n                          className={clsx(\"form-control  form-control-solid\")}\r\n                        />\r\n                      </div>\r\n                    </dt>\r\n                    <dd className=\"position-absolute\">\r\n                      {formik.touched.due && formik.errors.due && (\r\n                        <div className=\"fv-plugins-message-container fs-5\">\r\n                          <div className=\"fv-help-block\">\r\n                            <span role=\"alert\" className=\"text-danger\">\r\n                              {formik.errors.due}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </dd>\r\n                  </div>\r\n\r\n                  {/* end::Form group */}\r\n\r\n                  {/* begin::Form group Confirm password */}\r\n                  <div className=\"row \">\r\n                    <div className=\"col\">\r\n                      <dt>\r\n                        <label className=\"form-label fw-bolder text-dark\">\r\n                          Status\r\n                        </label>\r\n                        <select\r\n                          className=\"form-select form-select-solid\"\r\n                          aria-label=\"Select example\"\r\n                          {...formik.getFieldProps(\"status\")}\r\n                          aria-readonly\r\n                        >\r\n                          <option\r\n                            value=\"0\"\r\n                            className=\"badge badge-secondary\"\r\n                            selected\r\n                          >\r\n                            Not Started\r\n                          </option>\r\n                        </select>\r\n                      </dt>\r\n                      <dd className=\"position-absolute\">\r\n                        {formik.touched.status && formik.errors.status && (\r\n                          <div className=\"fv-plugins-message-container fs-5\">\r\n                            <div className=\"fv-help-block\">\r\n                              <span role=\"alert\" className=\"text-danger\">\r\n                                {formik.errors.status}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </dd>\r\n                    </div>\r\n\r\n                    <div className=\"col \">\r\n                      {/* <dt>\r\n                        <label className='class=\"form-label fw-bolder text-dark required'>\r\n                          Set Remainder\r\n                        </label>\r\n                        <select\r\n                          className=\"form-select form-select-solid\"\r\n                          aria-label=\"Select example\"\r\n                          {...formik.getFieldProps(\"remainder\")}\r\n                        >\r\n                          <option value=\"\">Set an Remainder</option>\r\n                          <option value=\"4\" className=\"badge badge-success\">\r\n                            4 hr's Before\r\n                          </option>\r\n                          <option\r\n                            value=\"9\"\r\n                            className=\"badge badge-warning\"\r\n                            selected\r\n                          >\r\n                            9 am on due Date\r\n                          </option>\r\n                          <option value=\"24\"  className=\"badge badge-danger\">\r\n                            24 hr's Before\r\n                          </option>\r\n                        </select>\r\n                      </dt>\r\n                      <dd className=\"position-absolute\">\r\n                        {formik.touched.remainder &&\r\n                          formik.errors.remainder && (\r\n                            <div className=\"fv-plugins-message-container\">\r\n                              <div className=\"fv-help-block\">\r\n                                <span role=\"alert\" className=\"text-danger\">\r\n                                  {formik.errors.remainder}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                      </dd> */}{\" \"}\r\n                      <label className='class=\"form-label fw-bolder text-dark required'>\r\n                        Set Remainder\r\n                      </label>\r\n                      <br />\r\n                      <div className=\"accordion \" id=\"kt_accordion_1\">\r\n                        <div className=\"accordion-item\">\r\n                            <button\r\n                              className=\"btn form-select form-select-solid   collapsed\"\r\n                              type=\"button\"\r\n                              data-bs-toggle=\"collapse\"\r\n                              data-bs-target=\"#kt_accordion_1_body_1\"\r\n                              aria-expanded=\"false\"\r\n                              aria-controls=\"kt_accordion_1_body_1\"\r\n                            >\r\n                              Select Reminder\r\n                            </button>\r\n                      \r\n                          <div\r\n                            id=\"kt_accordion_1_body_1\"\r\n                            className=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"kt_accordion_1_header_1\"\r\n                            data-bs-parent=\"#kt_accordion_1\"\r\n                          >\r\n                              <div className=\"accordion-body\" aria-label=\"Select example\">\r\n  {reminderOptions.map((reminder) => (\r\n    <div key={reminder} className=\"form-check form-check-custom form-check-solid\">\r\n   \r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"form-check-input\"\r\n          autoComplete=\"off\"\r\n          name=\"reminders\" // Use the correct name for all checkboxes\r\n          value={reminder} // Set the value as the reminder option\r\n          checked={(formik.values.remainder as string[]).includes(reminder)} // Check if the reminder is selected\r\n          onChange={(event) => {\r\n            const reminderValue = event.target.value;\r\n            if ((formik.values.remainder as string[]).includes(reminderValue)) {\r\n              formik.setFieldValue(\r\n                \"remainder\",\r\n                formik.values.remainder.filter((r) => r !== reminderValue)\r\n              );\r\n            } else {\r\n              formik.setFieldValue(\"remainder\", [...formik.values.remainder, reminderValue]);\r\n            }\r\n          }}\r\n        />\r\n           <label>\r\n        {reminder}\r\n      </label>\r\n      <br />\r\n    </div>\r\n  ))}\r\n</div>\r\n                          {\" \"}\r\n                            <dd className=\"position-absolute\">\r\n                              {formik.touched.remainder &&\r\n                                formik.errors.remainder && (\r\n                                  <div className=\"fv-plugins-message-container\">\r\n                                    <div className=\"fv-help-block\">\r\n                                      <span\r\n                                        role=\"alert\"\r\n                                        className=\"text-danger\"\r\n                                      >\r\n                                        {formik.errors.remainder}\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                            </dd>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div >\r\n                <dt>\r\n                  <label className=\"form-label fw-bolder text-dark required\">\r\n                    assigned to\r\n                  </label>\r\n                  <select\r\n  className=\"form-select form-select-solid\"\r\n  aria-label=\"Select example\"\r\n  {...formik.getFieldProps(\"users\")}\r\n>\r\n<option value={user.userId}>select user</option>\r\n{users.map((user: User, index: number) => (\r\n          <option key={index} value={user.id}>\r\n            {user.name}\r\n          </option>\r\n        ))}\r\n\r\n</select>\r\n                </dt>\r\n                <dd className=\"position-absolute\">\r\n                  {formik.touched.status && formik.errors.status && (\r\n                    <div className=\"fv-plugins-message-container\">\r\n                      <div className=\"fv-help-block\">\r\n                        <span role=\"alert\" className=\"text-danger\">\r\n                          {formik.errors.status}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </dd>\r\n              </div>\r\n                  {/* end::Form group */}\r\n                </dl>\r\n\r\n                {/* begin::Form group */}\r\n\r\n                <div className=\"text-center mx-auto\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    id=\"kt_sign_up\"\r\n                    className=\"btn btn-lg btn-primary w-75 mb-5\"\r\n                    disabled={!formik.isValid}\r\n                  >\r\n                    {!loading && (\r\n                      <span className=\"indicator-label\">Add Task</span>\r\n                    )}\r\n                    {loading && (\r\n                      <span\r\n                        className=\"indicator-progress\"\r\n                        style={{ display: \"block\" }}\r\n                      >\r\n                        Please wait...{\" \"}\r\n                        <span className=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\r\n                      </span>\r\n                    )}\r\n                  </button>\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    id=\"cancel_button\"\r\n                    className=\"btn btn-lg btn-light-primary w-75 mb-5\"\r\n                    data-bs-dismiss=\"modal\"\r\n                    onClick={() => formik.resetForm()}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n                {/* end::Form group */}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AddTask;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DataTable1 from \"react-data-table-component\";\r\nimport \"./DataTable.css\";\r\nimport { Link,useHistory } from \"react-router-dom\";\r\nimport { KTSVG } from \"../../../../../_metronic/helpers\";\r\nimport { Button } from \"bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function DataTable({ tasks,setModal }: any) {\r\n  \r\n\r\n  const history=useHistory();\r\n  // const state=useSelector(state=>state.user)\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    setData(tasks);\r\n  }, [tasks]);\r\n  //console.log(\"task\",data)\r\n   function handleDelete(name:string,id:string){\r\n    Swal.fire({ \r\n      title:'Are You Sure?',\r\n      html:'want to delete ' +name +' Task ?',\r\n      confirmButtonText: 'Yes',\r\n      showCloseButton: true,\r\n      showCancelButton: true,\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        const api=await fetch(`http://localhost:8081/api/app//deletetask/${id}`, { method: 'DELETE' })\r\n       const data=await api.json();\r\n       if(data.messageType==\"success\"){\r\n        toast.success(data.message, {\r\n          hideProgressBar: true,\r\n        });\r\n        setModal(true);\r\n      \r\n      }else{\r\n        toast.error(data.message, {\r\n          hideProgressBar: true,\r\n        });\r\n        //history.push('/todo');\r\n        setModal(true);\r\n       }\r\n      }\r\n   \r\n})}\r\n\r\n  function renderSwitch(param:string){\r\n    switch(param) {\r\n      \r\n        case '1':\r\n        return  <span className='badge badge-success'>Done</span>;\r\n        case '2':\r\n        return  <span className='badge badge-warning'>In-Progress</span>;\r\n        case '3':\r\n        return <span className='badge badge-danger'>Over Due</span>;\r\n        case '0':\r\n          return <span className='badge badge-secondary'>Not-started</span>;\r\n      default:\r\n        return<span className='badge badge-secondary'>Not-started</span>;\r\n    }\r\n  }\r\n\r\n  const customStyles = {\r\n    headCells: {\r\n      style: {\r\n        fontWeight: \"800\"\r\n        \r\n      },\r\n    },\r\n    cells: {\r\n      style: {\r\n        // textalign: \"center\",\r\n         width:\"175px\"\r\n      },\r\n    },\r\n    columns:{\r\n      style:{\r\n        \r\n      },\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"status\",\r\n      selector: (row: any) => renderSwitch(row.status) ,\r\n      sortable: true,\r\n    },\r\n    { name: \"Title\", selector: (row: any) => row.taskName, sortable: true },\r\n    {\r\n      name: \"Due Date\",\r\n      selector: (row: any) => row.taskDueDate,\r\n      sortable: true,\r\n    },\r\n    { name: \"Description\", selector: (row: any) => row.taskDescription },\r\n    {\r\n      name: \"Actions\",\r\n     \r\n      selector: (row: any) => (\r\n        <div className=\"d-flex justify-content-evenly\">\r\n          <div>\r\n            <Link\r\n              to={`/crafted/pages/edit/${row.taskId}`}\r\n              className=\"btn btn-icon btn-bg-light btn-active-color-primary btn-sm\"\r\n            >\r\n              <KTSVG\r\n                path=\"/media/icons/duotune/art/art005.svg\"\r\n                className=\"svg-icon-3\"\r\n              />\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <div\r\n              className=\"btn btn-icon btn-bg-light btn-active-color-primary btn-sm\"\r\n              onClick={() => \r\n                {handleDelete(row.taskName, row.taskId)}\r\n              }\r\n            >\r\n              <KTSVG\r\n                path=\"/media/icons/duotune/general/gen027.svg\"\r\n                className=\"svg-icon-3\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    \r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    setData(tasks);\r\n  }, [tasks]);\r\n\r\n  return (\r\n    <div className=\"dt\">\r\n      <DataTable1\r\n        columns={columns}\r\n        data={data}\r\n        pagination\r\n        \r\n        customStyles={customStyles}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n// import React, { useState } from 'react';\r\n// import { createRoot } from 'react-dom/client';\r\n// import { AgGridReact } from '@ag-grid-community/react';\r\n\r\n// import { ModuleRegistry, ColDef } from '@ag-grid-community/core';\r\n// import { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\r\n// import '@ag-grid-community/styles/ag-grid.css';\r\n// import '@ag-grid-community/styles/ag-theme-alpine.css';\r\n// import { MenuModule } from '@ag-grid-enterprise/menu';\r\n// import { ExcelExportModule } from '@ag-grid-enterprise/excel-export';\r\n\r\n// ModuleRegistry.registerModules([ClientSideRowModelModule, MenuModule, ExcelExportModule]);\r\n\r\n// const GridExample = () => {\r\n//     const [columnDefs, setColumnDefs] = useState<ColDef[]>([\r\n//         { headerName: 'Make', field: 'make' },\r\n//         { headerName: 'Model', field: 'model' },\r\n//         { headerName: 'Price', field: 'price' },\r\n//     ]);\r\n\r\n//     const [rowData, setRowData] = useState<any[]>([\r\n//         { make: 'Toyota', model: 'Celica', price: 35000 },\r\n//         { make: 'Ford', model: 'Mondeo', price: 32000 },\r\n//         { make: 'Porsche', model: 'Boxster', price: 72000 }\r\n//     ]);\r\n\r\n//     return <div className='ag-theme-alpine'\r\n//         style={{\r\n//             width: '100%',\r\n//             height: '100%'\r\n//         }}>\r\n//         <AgGridReact\r\n//             columnDefs={columnDefs}\r\n//             rowData={rowData}\r\n//             onGridReady={params => params.api.sizeColumnsToFit()}>\r\n//         </AgGridReact>\r\n//     </div>;\r\n// };\r\n","// vinit\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Table1 from \"./Table1\";\r\nimport ReactTables1 from \"../Content/reactTables\";\r\nimport { KTSVG } from \"../../../../../_metronic/helpers/components/KTSVG\";\r\nimport AddTask from \"../forms/addtask/addTask\";\r\nimport DataTable from \"./DataTable\";\r\nimport $, { event } from \"jquery\";\r\nimport { string } from \"yup\";\r\n\r\nexport default function BootstrapTable({ allTasks, setModal }: any) {\r\n  //console.log(\"allTasks\",allTasks)\r\n\r\n  const [data, setData] = useState(allTasks);\r\n  //   useEffect(()=>{\r\n  // setData(allTasks.allTasks)\r\n  //   },[allTasks])\r\n  // const [data,setData]=useState()\r\n  const [today, setToday] = useState<Array<{}> | null>([]);\r\n  useEffect(() => {\r\n    setData(allTasks);\r\n  }, [allTasks]);\r\n  useEffect(() => {\r\n    let todaysTask = data.filter(filterByDate);\r\n    setToday(todaysTask);\r\n  }, [data]);\r\n  function filterByDate(obj: any) {\r\n    const date = new Date(obj.taskDueDate).toJSON().slice(0, 10);\r\n    const today = new Date().toJSON().slice(0, 10);\r\n\r\n    if (date == today) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // function filterData(obj:any) {\r\n  //   var f1:any=$('#f1').val;\r\n  //   const ip=new Date(f1).toJSON().slice(0, 10);\r\n  //   var f2:any=$('#f2').val;\r\n  //   const date=new Date(obj.taskDueDate).toJSON().slice(0, 10);\r\n  //   if (date == ip) {\r\n  //     return true;\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n  function getFilter(event:any){\r\n    event.preventDefault();\r\n    let filterTask = data.filter(filterData);\r\n    setData(filterTask);\r\n  }\r\n  function filterData(obj:any) {\r\n    \r\n    var f1:any=$('#f1').val();\r\n    var f2:any=$('#f2').val();\r\n   if(f1){\r\n    const ip=new Date(f1).toJSON().slice(0, 10);\r\n    //alert(f1+\"-\"+f2)\r\n    const date=new Date(obj.taskDueDate).toJSON().slice(0, 10);\r\n    if (date === ip) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n   }else{\r\n    return data\r\n   }\r\n  }\r\n  const dataSearch = () => {\r\n    let d: string = $(\"#search\").val() as string;\r\n    var table = $(\"#tb1\").DataTable();\r\n\r\n    console.log(\"Searching\", table.search(d).draw());\r\n    //     $('#CustomSearchTextField').keyup(function(){\r\n    //       oTable.search($(this).val()).draw() ;\r\n    // })\r\n  }; \r\n\r\n  return (\r\n    <div className=\"card card-custom my-4\">\r\n      <div className=\"card-header\">\r\n        <span className=\"card-title\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-sm btn-dark\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#addTask\"\r\n          >\r\n            Add Task\r\n          </button>\r\n          {/* <div className=\"btn btn-sm btn-dark\"\r\n          data-kt-menu-trigger='click'\r\n          data-kt-menu-attach='parent'\r\n          data-kt-menu-placement='bottom-end'\r\n          data-kt-menu-flip='bottom'>\r\n            Add Task\r\n          </div> */}\r\n\r\n          <div>\r\n            <AddTask setModal={setModal} />\r\n          </div>\r\n        </span>\r\n        <div className=\"card-toolbar\">\r\n          {/* <div\r\n            className=\"mx-2 btn btn-icon btn-bg-solid btn-active-color-primary btn-sm dropdown-toggle \"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <i className=\"bi bi-funnel fs-1\"></i>\r\n          </div>\r\n\r\n          <ul className=\"dropdown-menu bg-secondary fw-bold p-4\">\r\n            <form id=\"filterFrm\" onSubmit={getFilter} onReset={()=>setData(allTasks)}>\r\n              {/* <hr className=\"dropdown-divider\" /> \r\n              <li>\r\n                <span className=\"\">By Date</span>\r\n                <input type=\"date\" className=\"form-control mb-2 mb-md-0\" id=\"f1\"/>\r\n              </li>\r\n              <hr />\r\n              <li>\r\n                <span className=\"\"> By Status</span>\r\n                <select\r\n                  className=\"form-control mb-2 mb-md-0\"\r\n                  aria-label=\"Select example\"\r\n                  id=\"f2\"\r\n                >\r\n                  <option value=\"\">Set an Status</option>\r\n                  <option value=\"1\" className=\"btn btn-success btn-sm \">\r\n                    Done\r\n                  </option>\r\n                  <option value=\"2\" className=\"btn btn-warning btn-sm\">\r\n                    In-Progress\r\n                  </option>\r\n                  <option value=\"0\" className=\"badge badge-secondary\">\r\n                    Not Started\r\n                  </option>{\" \"}\r\n                  <option value=\"4\" className=\"badge badge-danger\">\r\n                    Over Due\r\n                  </option>\r\n                </select>\r\n              </li>\r\n              <li>\r\n                <div className=\"d-flex justify-content-around mt-2\">\r\n                  <div>\r\n                    <button\r\n                      type=\"reset\"\r\n                      id=\"kt_login_signup_form_cancel_button\"\r\n                      className=\"btn btn-lg btn-light-primary btn-sm\"\r\n                      // data-bs-dismiss=\"modal\"\r\n                    >\r\n                      Reset\r\n                    </button>\r\n                  </div>\r\n                  <div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      id=\"kt_sign_up_submit\"\r\n                      className=\"btn btn-lg btn-primary btn-sm\"\r\n                    >\r\n                      Apply\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </form>\r\n             <li>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                Something else here\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <hr className=\"dropdown-divider\" />\r\n            </li>\r\n            <li>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                Separated link\r\n              </a>\r\n            </li> \r\n          </ul> */}\r\n\r\n          {/* <div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control  form-control-solid \"\r\n              name=\"search\"\r\n              placeholder=\"Search...\"\r\n              id=\"search\"\r\n              onKeyUp={dataSearch}\r\n            />\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <ul className=\"nav nav-tabs \" id=\"myTab\" role=\"tablist\">\r\n          <li className=\"nav-item\" role=\"presentation\">\r\n            <button\r\n              className=\"nav-link active\"\r\n              id=\"home-tab\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#home\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n              aria-controls=\"home\"\r\n              aria-selected=\"true\"\r\n            >\r\n              Today\r\n            </button>\r\n          </li>\r\n          <li className=\"nav-item\" role=\"presentation\">\r\n            <button\r\n              className=\"nav-link\"\r\n              id=\"profile-tab\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#profile\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n              aria-controls=\"profile\"\r\n              aria-selected=\"false\"\r\n            >\r\n              All\r\n            </button>\r\n          </li>\r\n          {/* <li className=\"nav-item\" role=\"presentation\">\r\n            <button\r\n              className=\"nav-link\"\r\n              id=\"contact-tab\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#contact\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n              aria-controls=\"contact\"\r\n              aria-selected=\"false\"\r\n            >\r\n              Contact\r\n            </button>\r\n          </li> */}\r\n        </ul>\r\n        <div className=\"tab-content \" id=\"myTabContent\">\r\n          <div\r\n            className=\"tab-pane fade show active\"\r\n            id=\"home\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"home-tab\"\r\n          >\r\n            {/* Lorem ipsum dolor sit amet consectetur adipisicing elit. Reiciendis qui eum hic, repellendus placeat, maiores quos aut alias itaque facilis sed provident, accusantium iusto ipsa nisi. Dolores cumque sunt quae.<br/> */}\r\n            {/* <ReactTables1 tasks={today}  setModal={setModal} /> */}\r\n            <DataTable\r\n              tasks={today}\r\n              setModal={setModal}\r\n              className=\"tables\"\r\n              id=\"tb1\"\r\n            />\r\n            {/* <AgTable tasks={data} setModal={setModal} className=\"tables\" id=\"tb1\"/>  */}\r\n          </div>\r\n          <div\r\n            className=\"tab-pane fade\"\r\n            id=\"profile\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"profile-tab\"\r\n          >\r\n            <ReactTables1 tasks={data} setModal={setModal} className=\"tables\" />\r\n            {/* <DataTable tasks={data} setModal={setModal}/>  */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-footer\"></div>\r\n    </div>\r\n  );\r\n}\r\n","// vinit\r\nimport React, {FC,useEffect,useState} from 'react'\r\nimport PageCard from '../../../../_metronic/layout/components/PageContectDisplayer/pageCard'\r\nimport { PageTitle } from '../../../../_metronic/layout/core'\r\nimport BootstrapTable from './Content/BootstrapTable'\r\n\r\nconst Todo:FC =  () => {\r\n  const [modal,setModal]=useState(false);\r\n  const user = JSON.parse(localStorage.getItem(\"user\")!);\r\n  const [data,setData]=useState([]);\r\n  const [id,setId]=useState(user.userId);\r\n  \r\n  const load= async ()=>{\r\n    try{\r\n      const api =await fetch(`http://localhost:8081/api/app/getallTask/${id}`, {\r\n        method: \"GET\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        \r\n      });\r\n      const apiData =await  api.json();\r\n      setData(apiData)\r\n      // console.log(\"dataapi\",apiData)\r\n    }catch(w){\r\n      console.log(\"error\");\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(modal) return\r\n    load();\r\n   \r\n  },[])\r\n  useEffect(() => {\r\n    // if(modal){\r\n    //   load();\r\n\r\n    // }\r\n    load();\r\n    \r\n        }, [modal]);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <PageTitle breadcrumbs={[]}>To-Do</PageTitle>\r\n      {/* <h1>Hello TODO</h1> */}\r\n      <PageCard Title=\"To-Do \" Description=\"The Todo feature in ProductivePal is a user-friendly task management tool that empowers users to organize and prioritize their tasks effectively. With its intuitive interface, users can easily create, track, and complete tasks, ensuring nothing is overlooked. Whether it's personal to-do lists or work-related tasks, ProductivePal's Todo feature ensures users stay on top of their responsibilities and achieve their goals efficiently.\" />\r\n        <BootstrapTable allTasks={data} setModal={setModal} />\r\n       </>\r\n  )\r\n}\r\n\r\nexport default Todo"],"names":["ReactTables","_ref","tasks","setModal","_useState","useState","f1","f2","_useState2","_slicedToArray","filterIps","setFilterIps","table","DataTable","destroy","pageLength","lengthMenu","search","columnDefs","targets","orderable","useHistory","_useState3","_useState4","data","setData","renderSwitch","param","_jsx","className","children","useEffect","length","_jsxs","_Fragment","id","onSubmit","event","preventDefault","column","draw","handleFilter","type","onChange","target","value","onClick","columns","map","ele","i","style","width","status","taskName","taskDueDate","taskDescription","Link","to","concat","taskId","KTSVG","path","Button","name","Swal","title","html","confirmButtonText","showCloseButton","showCancelButton","then","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","api","_data","wrap","_context","prev","next","isConfirmed","fetch","method","sent","json","messageType","toast","success","message","hideProgressBar","error","stop","_x","apply","arguments","user","JSON","parse","localStorage","getItem","initialValues","desc","due","remainder","users","userId","registrationSchema","Yup","shape","min","max","required","Date","now","loading","formik","useFormik","validationSchema","_onSubmit","values","_document$getElementB","setStatus","resetForm","Task","setSubmitting","setFieldValue","console","log","reminders","assignedby","headers","body","stringify","document","getElementById","click","_x2","setUsers","load","_ref3","_callee2","apiData","_context2","userName","noValidate","handleSubmit","_objectSpread","placeholder","autoComplete","getFieldProps","clsx","touched","errors","role","rows","selected","reminder","checked","includes","reminderValue","filter","r","_toConsumableArray","index","disabled","isValid","display","selector","row","sortable","DataTable1","pagination","customStyles","headCells","fontWeight","cells","BootstrapTable","allTasks","today","setToday","filterByDate","obj","toJSON","slice","todaysTask","AddTask","ReactTables1","modal","_useState5","_useState6","t0","PageTitle","breadcrumbs","PageCard","Title","Description"],"sourceRoot":""}