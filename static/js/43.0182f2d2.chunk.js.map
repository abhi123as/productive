{"version":3,"file":"static/js/43.0182f2d2.chunk.js","mappings":"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","sources":["app/modules/profile/ProfilePage.tsx"],"sourcesContent":["//vinit\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useField, useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Swal from \"sweetalert2\";\r\nimport DatePickerField from \"../DatePickers/datePicker1\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst formSchema = Yup.object().shape({\r\n  fname: Yup.string()\r\n    .min(1, \"At least one Character Required\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Name is required\"),\r\n  email: Yup.string()\r\n    .email(\"Wrong email format\")\r\n    .min(3, \"Minimum 3 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Email is required\"),\r\n  phNo: Yup.string()\r\n    .min(10, \"Minimum 10 symbols\")\r\n    //.max(15, \"Maximum 15 Crossed\")\r\n    .required(\"Phone Number is required\")\r\n    .matches(/\\+91\\d{10}/, \"Invalid Mobile Number\"),\r\n\r\n  dob: Yup.string()\r\n    .min(3, \"Minimum 3 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"DoB is required\"),\r\n \r\n});\r\nasync function updateUser(id: string, user: object) {\r\n \r\n  const api=await fetch(`http://localhost:8082/api/auth/update/${id}`, {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(\r\n      user\r\n    ),\r\n  });\r\n  const data=await api.json();\r\n  //console.log(\"func\",data)\r\n  return data;\r\n}\r\nconst ProfilePage = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\")!);\r\n   const [data,setData]=useState({});\r\n\r\n\r\n   \r\n  async function getUserById(userId:string){\r\n    const api=await fetch(`http://localhost:8082/api/auth/getUserById/${userId}`, {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n  });\r\n  const userData = await api.json();\r\n  //console.log(\"data\",apiData)\r\n  return userData.user;\r\n}\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const history=useHistory();\r\n  const [initialValues,setIntialValues]=useState({\r\n    fname:  \"\",\r\n    email:\"\" ,\r\n    dob: \"\",\r\n    phNo:\"\"\r\n  });\r\n useEffect(()=>{\r\n  getUserById(user.userId).then((user) => {\r\n  setIntialValues( {\r\n    fname: user?.username || \"\",\r\n    email:user?.userEmail || \"\" ,\r\n    dob:user?.userDateOfBirth || \"\",\r\n    phNo: user?.userPhone || \"\"\r\n  });\r\n})\r\n },[])\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: formSchema,\r\n     enableReinitialize:true,\r\n\r\n    onSubmit: (values, { setStatus, setFieldValue }) => {\r\n           setLoading(true);\r\n           setStatus(false);\r\n           setLoading(true);\r\n           //console.log(\"form \",values)\r\n           if (values === initialValues) {\r\n             setStatus(\"Same Data as Previous,unable to update\");\r\n             setLoading(false);\r\n           } else {\r\n             const User = {\r\n              userName: values.fname,\r\n              userEmail: values.email,\r\n              userDateOfBirth: values.dob,\r\n              userPhone: values.phNo,\r\n               };\r\n             //console.log(\"change obj \",task)\r\n               const res=updateUser(user.userId,User)\r\n               res.then((data)=>{\r\n                toast.success(data.message+\", Pls Refresh the page\", {\r\n                  hideProgressBar: true,\r\n                });\r\n                //localStorage.setItem(\"user\",data.user);\r\n                //console.log(\"update\",data)\r\n               })\r\n              setLoading(false); \r\n              history.push(\"/todo\");\r\n              \r\n           }\r\n      // console.log(\"form Data\", values);\r\n    },\r\n  });\r\n\r\n\r\n   \r\n\r\n  return (\r\n    <div className=\"card card-custom w-50 mx-auto\">\r\n      <div className=\"card-body\">\r\n        <form\r\n          className=\"form w-100 fv-plugins-bootstrap5 fv-plugins-framework\"\r\n          noValidate\r\n          id=\"resetForm\"\r\n          onSubmit={formik.handleSubmit}\r\n           \r\n        >\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-dark\">Profile</h1>\r\n          </div>\r\n\r\n          <div className=\"w-5 text-center mb-10\">\r\n            <i className=\"bi bi-person-circle fs-1\"></i>\r\n          </div>\r\n          {formik.status && (\r\n            <div className=\"mb-lg-15 alert d-flex justify-content-between alert-danger\">\r\n              <div className=\"alert-text font-weight-bold\">{formik.status}</div>\r\n              <div></div>\r\n            </div>\r\n          )}\r\n\r\n          <dl>\r\n            {/* begin::Form group Firstname */}\r\n            <div className=\"row fv-row \">\r\n              <div className=\"fv-row mb-6\">\r\n                <dt>\r\n                  <label className='class=\"form-label fw-bolder text-dark required'>\r\n                    Name\r\n                  </label>\r\n                  <input\r\n                     id=\"fname\"\r\n                    placeholder=\"Enter name\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                   \r\n                    {...formik.getFieldProps(\"fname\")}\r\n                    className={clsx(\r\n                      \"form-control form-control-lg form-control-solid\"\r\n                    )}\r\n                  />\r\n                </dt>\r\n                <dd className=\"position-absolute\">\r\n                  {formik.touched.fname && formik.errors.fname && (\r\n                    <div className=\"fv-plugins-message-container\">\r\n                      <div className=\"fv-help-block\">\r\n                        <span role=\"alert\" className=\"text-danger\">\r\n                          {formik.errors.fname}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </dd>\r\n              </div>\r\n            </div>\r\n            {/* end::Form group */}\r\n\r\n            {/* begin::Form group Email */}\r\n            <div className=\"fv-row mb-6\">\r\n              <dt>\r\n                <label className=\"form-label fw-bolder text-dark required\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  autoComplete=\"off\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                  className={clsx(\r\n                    \"form-control form-control-lg form-control-solid\"\r\n                  )}\r\n                />\r\n              </dt>\r\n              <dd className=\"position-absolute\">\r\n                {formik.touched.email && formik.errors.email && (\r\n                  <div className=\"fv-plugins-message-container\">\r\n                    <div className=\"fv-help-block\">\r\n                      <span role=\"alert\" className=\"text-danger\">\r\n                        {formik.errors.email}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </dd>\r\n            </div>\r\n            {/* end::Form group */}\r\n\r\n            {/* end::Form group */}\r\n\r\n            {/* date of  birth start */}\r\n\r\n            <div className=\"fv-row mb-6\">\r\n              <dt>\r\n                <label className='class=\"form-label fw-bolder text-dark required'>\r\n                  Date of birth\r\n                </label>\r\n                <input\r\n                  placeholder=\"23/02/1999\"\r\n                  type=\"date\"\r\n                  id=\"dob\"\r\n                  autoComplete=\"off\"\r\n                  {...formik.getFieldProps(\"dob\")}\r\n                  className={clsx(\r\n                    \"form-control form-control-lg form-control-solid\"\r\n                  )}\r\n                />\r\n              \r\n                {/* <DatePicker\r\n            {...formik.getFieldProps(\"dob\")}\r\n            onChange={()=> {console.log(\"data\")}}\r\n            name=\"startDate\"\r\n            dateFormat=\"MM/dd/yyyy\"\r\n            className={clsx(\r\n              \"form-control form-control-lg form-control-solid\"\r\n            )}\r\n            \r\n        /> */}\r\n              </dt>\r\n              <dd className=\"position-absolute\">\r\n                {formik.touched.dob && formik.errors.dob && (\r\n                  <div className=\"fv-plugins-message-container\">\r\n                    <div className=\"fv-help-block\">\r\n                      <span role=\"alert\" className=\"text-danger\">\r\n                        {formik.errors.dob}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </dd>\r\n            </div>\r\n            {/* date of  birth end here */}\r\n\r\n            {/* phone no class group start here */}\r\n            <div className=\"fv-row mb-6\">\r\n              <dt>\r\n                <label className=\"form-label fw-bolder text-dark required\">\r\n                  Phone\r\n                </label>\r\n                <div className=\"\">\r\n                  {/* <Field name=\"phNo\" component={PhoneField} type=\"text\"/>  */}\r\n                  {/* <PhoneInput\r\n              specialLabel={\"\"}\r\n              country={\"us\"}\r\n              inputClass={clsx(\r\n                \"form-control form-control-lg form-control-solid w-100\"\r\n              )}\r\n              //  onChange={(val) => }\r\n              // value={formik.values.phNo}\r\n              countryCodeEditable={false}\r\n              enableSearch={true}\r\n              inputProps={{...formik.getFieldProps('phNo')}}\r\n\r\n              // key={props.keys}\r\n              inputProps={{\r\n                name: \"phNo\",\r\n                required: true,\r\n              }}\r\n              /> */}\r\n                  {/* <PhoneField {...formik.getFieldProps('phNo')}/> */}\r\n                </div>\r\n                <input\r\n                  placeholder=\"Enter phone No\"\r\n                  type=\"text\"\r\n                  id=\"phNo\"\r\n                  autoComplete=\"off\"\r\n                  {...formik.getFieldProps(\"phNo\")}\r\n                  className={clsx(\r\n                    \"form-control form-control-lg form-control-solid\"\r\n                  )}\r\n                />\r\n              </dt>\r\n              <dd className=\"position-absolute\">\r\n                {formik.touched.phNo && formik.errors.phNo && (\r\n                  <div className=\"fv-plugins-message-container\">\r\n                    <div className=\"fv-help-block\">\r\n                      <span role=\"alert\" className=\"text-danger\">\r\n                        {formik.errors.phNo}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </dd>\r\n            </div>\r\n           \r\n          </dl>\r\n\r\n          {/* begin::Form group */}\r\n          <div className=\"text-center\">\r\n            <button\r\n              type=\"submit\"\r\n              id=\"kt_sign_up_submit\"\r\n              className=\"btn btn-lg btn-primary w-100 mb-5\"\r\n              disabled={!formik.isValid}\r\n            >\r\n              {!loading && <span className=\"indicator-label\">Update</span>}\r\n              {loading && (\r\n                <span\r\n                  className=\"indicator-progress\"\r\n                  style={{ display: \"block\" }}\r\n                >\r\n                  Please wait...{\" \"}\r\n                  <span className=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\r\n                </span>\r\n              )}\r\n            </button>\r\n\r\n            <button\r\n              type=\"reset\"\r\n              id=\"kt_login_signup_form_cancel_button\"\r\n              className=\"btn btn-lg btn-light-primary w-100 mb-5\"\r\n              onClick={()=>history.push('/todo')}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n          {/* end::Form group */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"names":["formSchema","Yup","shape","fname","min","max","required","email","phNo","matches","dob","_updateUser","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","id","user","api","data","wrap","_context2","prev","next","fetch","concat","method","headers","body","JSON","stringify","sent","json","abrupt","stop","apply","arguments","parse","localStorage","getItem","_useState","useState","_useState2","_slicedToArray","_getUserById","_callee","userId","userData","_context","_useState3","_useState4","loading","setLoading","history","useHistory","_useState5","_useState6","initialValues","setIntialValues","useEffect","_x3","getUserById","then","username","userEmail","userDateOfBirth","userPhone","formik","useFormik","validationSchema","enableReinitialize","onSubmit","values","_ref","setStatus","setFieldValue","User","userName","res","_x","_x2","updateUser","toast","success","message","hideProgressBar","push","_jsx","className","children","_jsxs","noValidate","handleSubmit","status","_objectSpread","placeholder","type","autoComplete","getFieldProps","clsx","touched","errors","role","disabled","isValid","style","display","onClick"],"sourceRoot":""}